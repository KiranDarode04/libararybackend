// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  librarian BookIR[] @relation(name: "librarian")
  student   BookIR[] @relation(name: "student")
  BookI     BookI[]  @relation(name: "User")

  Profile Profile?
}

model Profile {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  image  String
  userId String @unique @db.ObjectId
  User   User   @relation(fields: [userId], references: [id])
}

enum Role {
  ADMIN
  STUDENT
  LIBRARIAN
}

model Student {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String
  password String
}

model Book {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  bookCode  String      @unique
  name      String      @unique
  quantity  Int
  language  String
  author    String
  BookI     BookI[]     @relation(name: "bookCode")
  BookStore BookStore[] @relation(name: "bookStore")
  Book      BookIR[]    @relation(name: "bookIR")
}

//isue return
model BookIR {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  studentId String   @db.ObjectId
  bookId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user_id   String   @db.ObjectId
  librarian User     @relation(name: "librarian", fields: [user_id], references: [id])
  student   User     @relation(name: "student", fields: [studentId], references: [id])
  bookIR    Book     @relation(name: "bookIR", fields: [bookId], references: [id])
}

//bookImport
model BookI {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  bookCode      String
  Book          Book   @relation(name: "bookCode", fields: [bookCode], references: [bookCode])
  totalQuantity Int
  user_id       String @db.ObjectId
  User          User   @relation(name: "User", fields: [user_id], references: [id])
}

model BookStore {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  bookCode      String @unique
  Book          Book   @relation(name: "bookStore", fields: [bookCode], references: [bookCode])
  totalQuantity Int
  issueQuantity Int
}

